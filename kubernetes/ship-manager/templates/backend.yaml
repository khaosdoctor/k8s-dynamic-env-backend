apiVersion: apps/v1
kind: Deployment
metadata:
  name: ship-manager-backend
  labels:
    app: ship-manager-backend
    version: {{.Values.imageTag}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ship-manager-backend
  template:
    metadata:
      labels:
        app: ship-manager-backend
        version: {{.Values.imageTag}}
    spec:
      containers:
        - image: {{ required "Registry is required" .Values.registryName }}/{{ required "Image name is required" .Values.imageName }}:{{ required "Image tag is required" .Values.imageTag }}
          name: ship-manager-backend
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: DATABASE_MONGODB_URI
              {{ if eq .Values.deployType "development" }}value: "mongodb://ship-manager-database:27017/{{ .Values.dbName }}"{{end}}
              {{ if eq .Values.deployType "production" }}value: {{required "The CosmosDB connection is required" .Values.cosmosDbConnection | quote}}{{end}}
            - name: DATABASE_MONGODB_DBNAME
              value: {{ default "ship-manager" .Values.dbName | quote }}
            - name: VERSION
              value: {{ default "latest" .Values.imageTag | quote }}
---
apiVersion: v1
kind: Service
metadata:
  name: ship-manager-backend
  labels:
    app: ship-manager-backend
    version: {{.Values.imageTag}}
spec:
  selector:
    app: ship-manager-backend
  ports:
    - name: http
      port: 80
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ship-manager-backend
  labels:
    app: ship-manager-backend
    version: {{.Values.imageTag}}
  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
spec:
  rules:
    - host: {{ default "ship-manager-backend" .Values.ingress.hostname }}.{{ .Values.dnsZone }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ship-manager-backend
                port:
                  name: http
